import net.darkhax.curseforgegradle.TaskPublishCurseForge

plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'net.neoforged.gradle.userdev' version '7.0.57'
    id 'net.darkhax.curseforgegradle' version '1.+'
    id 'com.modrinth.minotaur' version '2.+'
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
}

base {
    archivesBaseName = "${mod_id}-neoforge-${supported_versions}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

runs {

    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSource project.sourceSets.main
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }


dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"

    implementation "maven.modrinth:cloth-config:6GeyuE7Y"
    implementation "maven.modrinth:architectury-api:BcFTKnjw"
    implementation "maven.modrinth:rei:HaXjvArr"

    implementation "maven.modrinth:ae2:Cf5vGMwV" // https://modrinth.com/mod/ae2/versions

}

repositories {
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Modrinth"
        url = "https://api.modrinth.com/maven"
        content {
            includeGroup "maven.modrinth"
        }
    }
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            file: 'META-INF/mods.toml',
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version: neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.register('publishCurseForge', TaskPublishCurseForge) {
    apiToken = file('../../API Tokens/ae2qolrecipes.md')
    def projectId = "${cf_id}".toString()
    def mainFile = upload(projectId, file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar"))
    mainFile.changelogType = 'markdown'
    mainFile.changelog = file('changelog.md')
    mainFile.addGameVersion('Client', 'Server')
    mainFile.releaseType = "${release_type}"
    "${neoforge_release_versions}".split(',').each {
        mainFile.addGameVersion("${it}")
    }
    mainFile.addRequirement("applied-energistics-2")
    mainFile.addOptional("catalogue")
}

modrinth {
    token = file('../../API Tokens/modrinth.md').text
    projectId = "${modrinth_id}"
    versionName = getArchivesBaseName() + "-" + getVersion()
    versionType = "${release_type}"
    changelog = file('changelog.md').text
    uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}.jar")
    gameVersions = "${neoforge_release_versions}".split(",") as List<String>
    dependencies {
        required.project "ae2"
    }
}
